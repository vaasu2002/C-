{
"cells": [
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "GzfdMfk10NE6"
},
"source": [
"<H2>Prediction using Supervised ML<H2>  \n",
"<H3>To predict the percentage of marks of an student based on the number of study hours<h3>"
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "X6A8Hm86UUZ-"
},
"source": [
"### Author: A V BHAVYA"
]
},
{
"cell_type": "code",
"execution_count": 1,
"metadata": {
"colab": {},
"colab_type": "code",
"id": "V9QN2ZxC38pB"
},
"outputs": [],
"source": [
"# Importing all libraries required in this notebook\n",
"import pandas as pd\n",
"import numpy as np  \n",
"import matplotlib.pyplot as plt  \n",
"%matplotlib inline"
]
},
{
"cell_type": "code",
"execution_count": 14,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 376
},
"colab_type": "code",
"executionInfo": {
"elapsed": 2534,
"status": "ok",
"timestamp": 1544113345787,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "LtU4YMEhqm9m",
"outputId": "5b4b36af-1545-497e-a6dc-7658bab71dbc"
},
"outputs": [
{
"name": "stdout",
"output_type": "stream",
"text": [
"Data imported successfully\n"
]
},
{
"data": {
"text/html": [
"<div>\n",
"<style scoped>\n",
"    .dataframe tbody tr th:only-of-type {\n",
"        vertical-align: middle;\n",
"    }\n",
"\n",
"    .dataframe tbody tr th {\n",
"        vertical-align: top;\n",
"    }\n",
"\n",
"    .dataframe thead th {\n",
"        text-align: right;\n",
"    }\n",
"</style>\n",
"<table border=\"1\" class=\"dataframe\">\n",
"  <thead>\n",
"    <tr style=\"text-align: right;\">\n",
"      <th></th>\n",
"      <th>Hours</th>\n",
"      <th>Scores</th>\n",
"    </tr>\n",
"  </thead>\n",
"  <tbody>\n",
"    <tr>\n",
"      <th>0</th>\n",
"      <td>2.5</td>\n",
"      <td>21</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>1</th>\n",
"      <td>5.1</td>\n",
"      <td>47</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>2</th>\n",
"      <td>3.2</td>\n",
"      <td>27</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>3</th>\n",
"      <td>8.5</td>\n",
"      <td>75</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>4</th>\n",
"      <td>3.5</td>\n",
"      <td>30</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>5</th>\n",
"      <td>1.5</td>\n",
"      <td>20</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>6</th>\n",
"      <td>9.2</td>\n",
"      <td>88</td>\n",
"    </tr>\n",
"  </tbody>\n",
"</table>\n",
"</div>"
],
"text/plain": [
"   Hours  Scores\n",
"0    2.5      21\n",
"1    5.1      47\n",
"2    3.2      27\n",
"3    8.5      75\n",
"4    3.5      30\n",
"5    1.5      20\n",
"6    9.2      88"
]
},
"execution_count": 14,
"metadata": {},
"output_type": "execute_result"
}
],
"source": [
"# Reading data from remote link\n",
"url = \"http://bit.ly/w-data\"\n",
"s_data = pd.read_csv(url)\n",
"print(\"Data imported successfully\")\n",
"\n",
"s_data.head(7)"
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "RHsPneuM4NgB"
},
"source": [
"Let's plot our data points on 2-D graph to eyeball our dataset and see if we can manually find any relationship between the data. We can create the plot with the following script:"
]
},
{
"cell_type": "code",
"execution_count": 21,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 294
},
"colab_type": "code",
"executionInfo": {
"elapsed": 718,
"status": "ok",
"timestamp": 1544113350499,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "qxYBZkhAqpn9",
"outputId": "37264af1-786d-4e0c-a668-383264d1ddd1"
},
"outputs": [
{
"data": {
"image/png": "\n",
"text/plain": [
"<Figure size 432x288 with 1 Axes>"
]
},
"metadata": {
"needs_background": "light"
},
"output_type": "display_data"
}
],
"source": [
"# Plotting the distribution of scores\n",
"s_data.plot(x='Hours', y='Scores', style='-')  \n",
"plt.title('Hours vs Percentage')  \n",
"plt.xlabel('Hours Studied')  \n",
"plt.ylabel('Percentage Score')  \n",
"plt.show()"
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "fiQaULio4Rzr"
},
"source": [
"**From the graph above, we can clearly see that there is a positive linear relation between the number of hours studied and percentage of score.**"
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "WWtEr64M4jdz"
},
"source": [
"### **Preparing the data**\n",
"\n",
"The next step is to divide the data into \"attributes\" (inputs) and \"labels\" (outputs)."
]
},
{
"cell_type": "code",
"execution_count": 27,
"metadata": {
"colab": {},
"colab_type": "code",
"id": "LiJ5210e4tNX"
},
"outputs": [],
"source": [
"X = s_data.iloc[:, :-1].values  \n",
"y = s_data.iloc[:, 1].values  "
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "Riz-ZiZ34fO4"
},
"source": [
"Now that we have our attributes and labels, the next step is to split this data into training and test sets. Well do this by using Scikit-Learns built-in train_test_split() method:"
]
},
{
"cell_type": "code",
"execution_count": 29,
"metadata": {
"colab": {},
"colab_type": "code",
"id": "udFYso1M4BNw"
},
"outputs": [],
"source": [
"from sklearn.model_selection import train_test_split  \n",
"X_train, X_test, y_train, y_test = train_test_split(X, y, \n",
"                            test_size=0.2, random_state=0) "
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "a6WXptFU5CkC"
},
"source": [
"### **Training the Algorithm**\n",
"We have split our data into training and testing sets, and now is finally the time to train our algorithm. "
]
},
{
"cell_type": "code",
"execution_count": 6,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 34
},
"colab_type": "code",
"executionInfo": {
"elapsed": 701,
"status": "ok",
"timestamp": 1544113358086,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "qddCuaS84fpK",
"outputId": "befbd977-772c-4bd1-bb48-ee5dd6bae73c"
},
"outputs": [
{
"name": "stdout",
"output_type": "stream",
"text": [
"Training complete.\n"
]
}
],
"source": [
"from sklearn.linear_model import LinearRegression  \n",
"regressor = LinearRegression()  \n",
"regressor.fit(X_train, y_train) \n",
"\n",
"print(\"Training complete.\")"
]
},
{
"cell_type": "code",
"execution_count": 30,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 265
},
"colab_type": "code",
"executionInfo": {
"elapsed": 985,
"status": "ok",
"timestamp": 1544113360867,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "J61NX2_2-px7",
"outputId": "d20ec1fd-3e2d-4eae-84a2-a0df57d31009"
},
"outputs": [
{
"data": {
"image/png": "\n",
"text/plain": [
"<Figure size 432x288 with 1 Axes>"
]
},
"metadata": {
"needs_background": "light"
},
"output_type": "display_data"
}
],
"source": [
"# Plotting the regression line\n",
"line = regressor.coef_*X+regressor.intercept_\n",
"\n",
"# Plotting for the test data\n",
"plt.scatter(X, y)\n",
"plt.plot(X, line);\n",
"plt.title(\"Comparison\")\n",
"plt.show()"
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "JCQn-g4m5OK2"
},
"source": [
"### **Making Predictions**\n",
"Now that we have trained our algorithm, it's time to make some predictions."
]
},
{
"cell_type": "code",
"execution_count": 8,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 102
},
"colab_type": "code",
"executionInfo": {
"elapsed": 698,
"status": "ok",
"timestamp": 1544113363729,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "Tt-Fmzu55EGM",
"outputId": "46f1acf8-91ac-4984-cfbe-e614aa9ea849"
},
"outputs": [
{
"name": "stdout",
"output_type": "stream",
"text": [
"[[1.5]\n",
" [3.2]\n",
" [7.4]\n",
" [2.5]\n",
" [5.9]]\n"
]
}
],
"source": [
"print(X_test) # Testing data - In Hours\n",
"y_pred = regressor.predict(X_test) # Predicting the scores"
]
},
{
"cell_type": "code",
"execution_count": 9,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 204
},
"colab_type": "code",
"executionInfo": {
"elapsed": 753,
"status": "ok",
"timestamp": 1544113366918,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "6bmZUMZh5QLb",
"outputId": "8ea11a9e-c1b7-4fab-ab62-4dcbd2c8607b"
},
"outputs": [
{
"data": {
"text/html": [
"<div>\n",
"<style scoped>\n",
"    .dataframe tbody tr th:only-of-type {\n",
"        vertical-align: middle;\n",
"    }\n",
"\n",
"    .dataframe tbody tr th {\n",
"        vertical-align: top;\n",
"    }\n",
"\n",
"    .dataframe thead th {\n",
"        text-align: right;\n",
"    }\n",
"</style>\n",
"<table border=\"1\" class=\"dataframe\">\n",
"  <thead>\n",
"    <tr style=\"text-align: right;\">\n",
"      <th></th>\n",
"      <th>Actual</th>\n",
"      <th>Predicted</th>\n",
"    </tr>\n",
"  </thead>\n",
"  <tbody>\n",
"    <tr>\n",
"      <th>0</th>\n",
"      <td>20</td>\n",
"      <td>16.884145</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>1</th>\n",
"      <td>27</td>\n",
"      <td>33.732261</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>2</th>\n",
"      <td>69</td>\n",
"      <td>75.357018</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>3</th>\n",
"      <td>30</td>\n",
"      <td>26.794801</td>\n",
"    </tr>\n",
"    <tr>\n",
"      <th>4</th>\n",
"      <td>62</td>\n",
"      <td>60.491033</td>\n",
"    </tr>\n",
"  </tbody>\n",
"</table>\n",
"</div>"
],
"text/plain": [
"   Actual  Predicted\n",
"0      20  16.884145\n",
"1      27  33.732261\n",
"2      69  75.357018\n",
"3      30  26.794801\n",
"4      62  60.491033"
]
},
"execution_count": 9,
"metadata": {},
"output_type": "execute_result"
}
],
"source": [
"# Comparing Actual vs Predicted\n",
"df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  \n",
"df "
]
},
{
"cell_type": "code",
"execution_count": 31,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 51
},
"colab_type": "code",
"executionInfo": {
"elapsed": 862,
"status": "ok",
"timestamp": 1544113370494,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "KAFO8zbx-AH1",
"outputId": "fcb3830f-3cda-4dcb-f122-84b71f101fae"
},
"outputs": [
{
"name": "stdout",
"output_type": "stream",
"text": [
"No of hours=7\n",
"Predicted Score=71.39275540593034\n"
]
}
],
"source": [
"score_pred=np.array([7])\n",
"score_pred=score_pred.reshape(-1,1)\n",
"predict=regressor.predict(score_pred)\n",
"print(\"No of hours={}\".format(7))\n",
"print(\"Predicted Score={}\".format(predict[0]))"
]
},
{
"cell_type": "markdown",
"metadata": {
"colab_type": "text",
"id": "0AAsPVA_6KmK"
},
"source": [
"### **Evaluating the model**\n",
"\n",
"The final step is to evaluate the performance of algorithm. This step is particularly important to compare how well different algorithms perform on a particular dataset. For simplicity here, we have chosen the mean square error. There are many such metrics."
]
},
{
"cell_type": "code",
"execution_count": 12,
"metadata": {
"colab": {
"base_uri": "https://localhost:8080/",
"height": 34
},
"colab_type": "code",
"executionInfo": {
"elapsed": 834,
"status": "ok",
"timestamp": 1544113374919,
"user": {
"displayName": "A M Aditya",
"photoUrl": "https://lh3.googleusercontent.com/-WI8p7JNWLic/AAAAAAAAAAI/AAAAAAAAAfs/vS8ElgH0p0c/s64/photo.jpg",
"userId": "15341571102300750919"
},
"user_tz": -480
},
"id": "r5UOrRH-5VCQ",
"outputId": "7b9ddcf1-2848-408f-d81f-7a60652c381e"
},
"outputs": [
{
"name": "stdout",
"output_type": "stream",
"text": [
"Mean Absolute Error: 4.183859899002975\n"
]
}
],
"source": [
"from sklearn import metrics  \n",
"print('Mean Absolute Error:', \n",
"      metrics.mean_absolute_error(y_test, y_pred)) "
]
},
{
"cell_type": "code",
"execution_count": null,
"metadata": {},
"outputs": [],
"source": []
}
],
"metadata": {
"colab": {
"collapsed_sections": [],
"name": "Linear Regression.ipynb",
"provenance": [
{
"file_id": "1wzD9Aa7cc7kRwyXq8DeJ8H56mJInOMZN",
"timestamp": 1544113281508
}
],
"version": "0.3.2"
},
"kernelspec": {
"display_name": "Python 3",
"language": "python",
"name": "python3"
},
"language_info": {
"codemirror_mode": {
"name": "ipython",
"version": 3
},
"file_extension": ".py",
"mimetype": "text/x-python",
"name": "python",
"nbconvert_exporter": "python",
"pygments_lexer": "ipython3",
"version": "3.7.6"
}
},
"nbformat": 4,
"nbformat_minor": 1
}
